<html xmlns = "http://www.w3.org/1999/xhtml"
 xmlns:h = "http://java.sun.com/jsf/html"
 xmlns:f = "http://java.sun.com/jsf/core"
 xmlns:o="http://www.onlineobjects.com/jsf"
 xmlns:composite = "http://java.sun.com/jsf/composite"
>
  <composite:interface>
    <composite:attribute name="point" />
  </composite:interface>

  <composite:implementation>
    <!-- TODO: Add the value of data-initial-token with a JWT
    dynamically generated on the server -->
    <script src="https://cdn.apple-mapkit.com/mk/5.x.x/mapkit.core.js"
        crossorigin="crossorigin" async="async"
        data-callback="initMapKit"
        data-libraries="map,annotations"
        data-initial-token="eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjU1NEZEQkM2NzkifQ.eyJpc3MiOiJWWTdFTEJKNkJQIiwiaWF0IjoxNzAxMzcwNzEyLCJleHAiOjE3MzI5MjQ4MDB9.R8_t75r8HYA8aJaoOS_VNfah9EnV8IlHY6sb304RC7MLIXhBD53AvId5EgRrOV0vfagd_YsZsDvluVmI3-DBuw"></script>
    <script type="module">
    /**
     * Wait for MapKit JS to be loaded by the script tag,
     * calls `mapkit.init` to set authorizationCallback with your JWT.
     */
    const setupMapKitJs = async() => {
        if (!window.mapkit || window.mapkit.loadedLibraries.length === 0) {
            // mapkit.core.js or the libraries are not loaded yet.
            // Set up the callback and wait for it to be called.
            await new Promise(resolve => { window.initMapKit = resolve });

            // Clean up
            delete window.initMapKit;
        }

        // TODO: For production use, the JWT should not be hard-coded into JS.
        const jwt = "Insert Your JWT Here";
        mapkit.init({
            authorizationCallback: done => { done(jwt); }
        });
    };

    /**
     * Script Entry Point
     */
    const main = async() => {
        await setupMapKitJs();

        const cupertino = new mapkit.CoordinateRegion(
            new mapkit.Coordinate(<o:out value="#{cc.attrs.point.latitude}"/>, <o:out value="#{cc.attrs.point.longitude}"/>),
            new mapkit.CoordinateSpan(0.167647972, 0.354985255)
        );

        // Create a map in the element whose ID is "map-container"
        const map = new mapkit.Map("map-container", {mapType: mapkit.Map.MapTypes.Satellite});
        //map.region = cupertino;
        
        const event = new mapkit.Coordinate(<o:out value="#{cc.attrs.point.latitude}"/>, <o:out value="#{cc.attrs.point.longitude}"/>);
            const eventAnnotation = new mapkit.MarkerAnnotation(event, {
                color: "#4eabe9",
                //title: "Event",
                glyphText: "!" // Popcorn Emoji
            });
            map.showItems([eventAnnotation]);
    };

    main();

    </script>
    <style>
    #map-container {
        width: 100%;
        height: 600px;
    }
    </style>
    <div id="map-container"></div>
  </composite:implementation>
</html>